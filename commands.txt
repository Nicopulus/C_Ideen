To create a simple executable direct from code:
gcc -o "executable_name" "script_name".c

To create the *.c and *.h files, for example: "script_name".c and "script_name".h
    gcc -c "script_name".c
    gcc -shared -o "script_name".dll -Wl,--out-implib,libtstdll.a "script_name".o ##
    gcc -o "name.exe" -L. -l"name_of_DLL"
SOURCE: https://www.codementor.io/@a_hathon/building-and-using-dlls-in-c-d7rrd4caz

int: 16-bit(2 bytes), 32-bit (4 bytes)
float: 32-bit (4 bytes) - 6 significant digits - [10^-38 bis 10^38]
char: character (1 bytes)
short: short integer (2 bytes)
long: long integer (6 bytes)
double: double-precision floating point

in "printf" function we can write the argument's representations as follow:
%o --> octal notation
%x --> hexadecimal notation
%c --> character
%s --> string
%ld --> long integer

%% --> for % symbol itself
for numbers in "printf" function we can write the following options:
%d --> to indicate a decimal
%3d --> to indicate a 3 width decimal
%f --> to indicate a float
%3f.4f --> to inddicate 3 positoion before the decimal point and 4 position after the decimal point.

"#define" means that a symbolic name or constant was defined --> special string of characters. without ";" at the end.
++a --> represents a = a + 1
"%ld" tells to the printf function that the argument is a long integer.

commentar lineas: STRG+K+C
descomentar lineas: STRG+K+U